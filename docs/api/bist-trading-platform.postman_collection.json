{
	"info": {
		"_postman_id": "bist-trading-platform-2025",
		"name": "BIST Trading Platform - Complete Test Suite",
		"description": "Comprehensive test collection for BIST Trading Platform Monolith",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{jwt_token}}",
				"type": "string"
			}
		]
	},
	"item": [
		{
			"name": "1. Authentication",
			"item": [
				{
					"name": "Register New User",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.token) {",
									"        pm.environment.set('jwt_token', response.token);",
									"        console.log('JWT Token saved:', response.token);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"email\": \"testuser@example.com\",\n  \"password\": \"Test123!@#\",\n  \"firstName\": \"Test\",\n  \"lastName\": \"User\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/register",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"register"
							]
						},
						"description": "Register a new user account"
					},
					"response": []
				},
				{
					"name": "Login",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200) {",
									"    const response = pm.response.json();",
									"    pm.environment.set('jwt_token', response.token);",
									"    console.log('JWT Token saved:', response.token);",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"username\": \"testuser\",\n  \"password\": \"Test123!@#\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/auth/login",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"login"
							]
						},
						"description": "Login with username and password"
					},
					"response": []
				},
				{
					"name": "Logout",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/logout",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"logout"
							]
						},
						"description": "Logout current user"
					},
					"response": []
				},
				{
					"name": "Get Current User Profile",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/auth/me",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"auth",
								"me"
							]
						},
						"description": "Get current authenticated user profile"
					},
					"response": []
				}
			]
		},
		{
			"name": "2. User Management",
			"item": [
				{
					"name": "Get All Users",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users?page=0&size=10",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "10"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get User by Username",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/users/testuser",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"testuser"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update User Profile",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"firstName\": \"Updated\",\n  \"lastName\": \"Name\",\n  \"email\": \"updated@example.com\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/users/testuser",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"users",
								"testuser"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "3. Symbols (Market Data)",
			"item": [
				{
					"name": "Get All Symbols",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/symbols",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"symbols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Symbol by Code",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/symbols/GARAN",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"symbols",
								"GARAN"
							]
						}
					},
					"response": []
				},
				{
					"name": "Create Symbol",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.id) {",
									"        pm.environment.set('symbol_id', response.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"code\": \"GARAN\",\n  \"name\": \"Garanti BankasÄ±\",\n  \"exchange\": \"BIST\",\n  \"sector\": \"Bankalar\",\n  \"active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/symbols",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"symbols"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Symbol",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"name\": \"Garanti BBVA\",\n  \"sector\": \"Finans\",\n  \"active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/symbols/GARAN",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"symbols",
								"GARAN"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "4. Broker Accounts",
			"item": [
				{
					"name": "Create Broker Account",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.id) {",
									"        pm.environment.set('broker_account_id', response.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"brokerName\": \"AlgoLab\",\n  \"accountNumber\": \"TEST123456\",\n  \"accountType\": \"INDIVIDUAL\",\n  \"apiKey\": \"test-api-key\",\n  \"apiSecret\": \"test-api-secret\",\n  \"active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/broker-accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"broker-accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Broker Accounts",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/broker-accounts",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"broker-accounts"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Broker Account by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/broker-accounts/{{broker_account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"broker-accounts",
								"{{broker_account_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Update Broker Account",
					"request": {
						"method": "PUT",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"accountNumber\": \"TEST123456-UPDATED\",\n  \"active\": true\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/broker-accounts/{{broker_account_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"broker-accounts",
								"{{broker_account_id}}"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "5. Orders",
			"item": [
				{
					"name": "Create Order",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"if (pm.response.code === 200 || pm.response.code === 201) {",
									"    const response = pm.response.json();",
									"    if (response.id) {",
									"        pm.environment.set('order_id', response.id);",
									"    }",
									"}"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "POST",
						"header": [
							{
								"key": "Content-Type",
								"value": "application/json"
							}
						],
						"body": {
							"mode": "raw",
							"raw": "{\n  \"symbolCode\": \"GARAN\",\n  \"side\": \"BUY\",\n  \"type\": \"LIMIT\",\n  \"quantity\": 100,\n  \"price\": 50.25,\n  \"timeInForce\": \"DAY\"\n}"
						},
						"url": {
							"raw": "{{base_url}}/api/orders",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get All Orders",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders?page=0&size=20",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders"
							],
							"query": [
								{
									"key": "page",
									"value": "0"
								},
								{
									"key": "size",
									"value": "20"
								}
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Order by ID",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/{{order_id}}",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{order_id}}"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Orders by Symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/symbol/GARAN",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"symbol",
								"GARAN"
							]
						}
					},
					"response": []
				},
				{
					"name": "Cancel Order",
					"request": {
						"method": "POST",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/orders/{{order_id}}/cancel",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"orders",
								"{{order_id}}",
								"cancel"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "6. Positions",
			"item": [
				{
					"name": "Get All Positions",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/positions",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"positions"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Position by Symbol",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/positions/symbol/GARAN",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"positions",
								"symbol",
								"GARAN"
							]
						}
					},
					"response": []
				},
				{
					"name": "Get Position Summary",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/api/positions/summary",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"api",
								"positions",
								"summary"
							]
						}
					},
					"response": []
				}
			]
		},
		{
			"name": "7. Health & Monitoring",
			"item": [
				{
					"name": "Health Check",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/actuator/health",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actuator",
								"health"
							]
						}
					},
					"response": []
				},
				{
					"name": "Application Info",
					"request": {
						"auth": {
							"type": "noauth"
						},
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/actuator/info",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actuator",
								"info"
							]
						}
					},
					"response": []
				},
				{
					"name": "Metrics",
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{base_url}}/actuator/metrics",
							"host": [
								"{{base_url}}"
							],
							"path": [
								"actuator",
								"metrics"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "base_url",
			"value": "http://localhost:8080",
			"type": "string"
		},
		{
			"key": "jwt_token",
			"value": "",
			"type": "string"
		},
		{
			"key": "symbol_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "broker_account_id",
			"value": "",
			"type": "string"
		},
		{
			"key": "order_id",
			"value": "",
			"type": "string"
		}
	]
}
