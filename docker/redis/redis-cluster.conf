# =============================================================================
# Redis Cluster Configuration for BIST Trading Platform
# Optimized for high-performance trading data caching
# =============================================================================

# =============================================================================
# NETWORK CONFIGURATION
# =============================================================================
bind 0.0.0.0
port 6379
timeout 0
tcp-keepalive 300
tcp-backlog 511

# =============================================================================
# CLUSTER CONFIGURATION
# =============================================================================
cluster-enabled yes
cluster-config-file nodes.conf
cluster-node-timeout 15000
cluster-announce-hostname ""
cluster-announce-port 6379
cluster-announce-bus-port 16379
cluster-require-full-coverage yes
cluster-replica-validity-factor 10
cluster-migration-barrier 1

# Cluster failure detection
cluster-replica-no-failover no
cluster-allow-replica-migration yes

# =============================================================================
# MEMORY MANAGEMENT (Optimized for Trading Data)
# =============================================================================
maxmemory 768mb
maxmemory-policy allkeys-lru
maxmemory-samples 5

# Memory optimization for trading workloads
hash-max-ziplist-entries 512
hash-max-ziplist-value 64
list-max-ziplist-size -2
list-compress-depth 0
set-max-intset-entries 512
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# =============================================================================
# PERSISTENCE (Balanced for Performance and Durability)
# =============================================================================
# AOF Configuration
appendonly yes
appendfilename "appendonly.aof"
appendfsync everysec
no-appendfsync-on-rewrite no
auto-aof-rewrite-percentage 100
auto-aof-rewrite-min-size 64mb
aof-load-truncated yes
aof-use-rdb-preamble yes

# RDB Configuration (for backup)
save 900 1
save 300 10
save 60 10000
stop-writes-on-bgsave-error yes
rdbcompression yes
rdbchecksum yes
dbfilename dump.rdb

# =============================================================================
# LOGGING
# =============================================================================
loglevel notice
logfile /var/log/redis/redis-cluster.log
syslog-enabled no

# =============================================================================
# PERFORMANCE TUNING FOR TRADING WORKLOADS
# =============================================================================
# Client connection management
maxclients 10000
tcp-keepalive 300

# Command processing
lua-time-limit 5000
slowlog-log-slower-than 10000
slowlog-max-len 128

# Threading (for Redis 6.0+)
io-threads 4
io-threads-do-reads yes

# Memory defragmentation
activedefrag yes
active-defrag-ignore-bytes 100mb
active-defrag-threshold-lower 10
active-defrag-threshold-upper 100
active-defrag-cycle-min 1
active-defrag-cycle-max 25

# Lazy freeing (non-blocking deletes)
lazyfree-lazy-eviction no
lazyfree-lazy-expire no
lazyfree-lazy-server-del no

# =============================================================================
# SECURITY CONFIGURATION
# =============================================================================
# Authentication (configure in production)
# requirepass TradingPlatformSecurePassword123!
# masterauth TradingPlatformSecurePassword123!

# Protected mode (disable for cluster)
protected-mode no

# Disable dangerous commands in production
# rename-command FLUSHALL ""
# rename-command FLUSHDB ""
# rename-command CONFIG ""
# rename-command DEBUG ""

# =============================================================================
# CLIENT SETTINGS
# =============================================================================
# Output buffer limits for different client types
client-output-buffer-limit normal 0 0 0
client-output-buffer-limit replica 256mb 64mb 60
client-output-buffer-limit pubsub 32mb 8mb 60

# =============================================================================
# TRADING-SPECIFIC OPTIMIZATIONS
# =============================================================================
# Notifications for market data expiration
notify-keyspace-events "Ex"

# Hash settings optimized for market data structures
hash-max-ziplist-entries 512
hash-max-ziplist-value 64

# List settings for order book data
list-max-ziplist-size -2
list-compress-depth 0

# Set settings for symbol collections
set-max-intset-entries 512

# Sorted set settings for price levels
zset-max-ziplist-entries 128
zset-max-ziplist-value 64

# =============================================================================
# LATENCY MONITORING
# =============================================================================
latency-monitor-threshold 100

# =============================================================================
# MODULE CONFIGURATION
# =============================================================================
# Enable modules for time-series data if available
# loadmodule /usr/lib/redis/modules/redistimeseries.so
# loadmodule /usr/lib/redis/modules/redisgraph.so

# =============================================================================
# REPLICATION SETTINGS
# =============================================================================
replica-serve-stale-data yes
replica-read-only yes
repl-diskless-sync no
repl-diskless-sync-delay 5
repl-diskless-load disabled
repl-ping-replica-period 10
repl-timeout 60
repl-disable-tcp-nodelay no
repl-backlog-size 1mb
repl-backlog-ttl 3600

# =============================================================================
# SENTINEL SUPPORT
# =============================================================================
# Enable if using Sentinel for HA
# sentinel announce-ip <ip>
# sentinel announce-port <port>

# =============================================================================
# OPTIMIZATION NOTES
# =============================================================================
# 1. maxmemory set to 768MB to leave headroom for OS
# 2. appendfsync set to everysec for balance of durability and performance
# 3. io-threads enabled for better throughput on multi-core systems
# 4. activedefrag enabled to prevent memory fragmentation
# 5. Cluster node timeout set to 15s for faster failure detection
# 6. Memory policy set to allkeys-lru for automatic eviction
# 7. Ziplist optimizations for efficient storage of small collections