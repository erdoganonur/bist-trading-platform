version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: bist-postgres
    environment:
      POSTGRES_DB: bist_trading
      POSTGRES_USER: bist_user
      POSTGRES_PASSWORD: bist_password
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - bist-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U bist_user -d bist_trading"]
      interval: 30s
      timeout: 10s
      retries: 3

  # BIST Trading Platform - REAL Monolith
  bist-app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: bist-trading-app
    environment:
      SPRING_PROFILES_ACTIVE: docker
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/bist_trading
      SPRING_DATASOURCE_USERNAME: bist_user
      SPRING_DATASOURCE_PASSWORD: bist_password
      SPRING_FLYWAY_ENABLED: false
      SPRING_JPA_HIBERNATE_DDL_AUTO: update
      SPRING_AUTOCONFIGURE_EXCLUDE: org.springframework.boot.autoconfigure.data.redis.RedisAutoConfiguration
      BIST_SECURITY_JWT_SECRET: bist-trading-platform-super-secret-key-for-jwt-tokens-256-bit-long
      SERVER_PORT: 8080
    ports:
      - "8080:8080"
    depends_on:
      postgres:
        condition: service_healthy
    networks:
      - bist-network
    volumes:
      - app_logs:/app/logs
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

volumes:
  postgres_data:
    driver: local
  app_logs:
    driver: local

networks:
  bist-network:
    driver: bridge