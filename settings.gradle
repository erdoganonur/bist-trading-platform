// Plugin management - must be first
pluginManagement {
    repositories {
        gradlePluginPortal()
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }
}

rootProject.name = 'bist-trading-platform'

// Core modules
include 'platform-core:core-common'
include 'platform-core:core-domain'
include 'platform-core:core-security'
include 'platform-core:core-messaging'

// Infrastructure modules
include 'platform-infrastructure:infrastructure-persistence'
include 'platform-infrastructure:infrastructure-integration'
include 'platform-infrastructure:infrastructure-monitoring'

// Service modules
include 'platform-services:user-management-service'
include 'platform-services:market-data-service'
include 'platform-services:broker-integration-service'

// Set project directories
project(':platform-core:core-common').projectDir = file('platform-core/core-common')
project(':platform-core:core-domain').projectDir = file('platform-core/core-domain')
project(':platform-core:core-security').projectDir = file('platform-core/core-security')
project(':platform-core:core-messaging').projectDir = file('platform-core/core-messaging')

project(':platform-infrastructure:infrastructure-persistence').projectDir = file('platform-infrastructure/infrastructure-persistence')
project(':platform-infrastructure:infrastructure-integration').projectDir = file('platform-infrastructure/infrastructure-integration')
project(':platform-infrastructure:infrastructure-monitoring').projectDir = file('platform-infrastructure/infrastructure-monitoring')

project(':platform-services:user-management-service').projectDir = file('platform-services/user-management-service')
project(':platform-services:market-data-service').projectDir = file('platform-services/market-data-service')
project(':platform-services:broker-integration-service').projectDir = file('platform-services/broker-integration-service')

// Dependency resolution
dependencyResolutionManagement {
    repositories {
        mavenCentral()
        maven { url 'https://repo.spring.io/milestone' }
        maven { url 'https://repo.spring.io/snapshot' }
    }

    versionCatalogs {
        libs {
            library('spring-boot-starter-web', 'org.springframework.boot', 'spring-boot-starter-web').withoutVersion()
            library('spring-boot-starter-data-jpa', 'org.springframework.boot', 'spring-boot-starter-data-jpa').withoutVersion()
            library('spring-boot-starter-security', 'org.springframework.boot', 'spring-boot-starter-security').withoutVersion()
            library('spring-boot-starter-validation', 'org.springframework.boot', 'spring-boot-starter-validation').withoutVersion()
            library('spring-boot-starter-actuator', 'org.springframework.boot', 'spring-boot-starter-actuator').withoutVersion()
            library('spring-kafka', 'org.springframework.kafka', 'spring-kafka').withoutVersion()
            library('spring-cloud-starter-config', 'org.springframework.cloud', 'spring-cloud-starter-config').withoutVersion()
        }
    }
}