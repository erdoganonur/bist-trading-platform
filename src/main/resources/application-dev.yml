# BIST Trading Platform - Development Environment Configuration
# Bu dosya development ortamı için özel ayarları içerir

server:
  port: 8081

spring:
  # Development Database Configuration
  datasource:
    url: jdbc:postgresql://localhost:5432/bist_trading_dev
    username: ${DB_USERNAME:bist_dev_user}
    password: ${DB_PASSWORD:bist_dev_pass}
    hikari:
      maximum-pool-size: 10
      minimum-idle: 2
      connection-timeout: 10000
      leak-detection-threshold: 30000

  # Development JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: true
    properties:
      hibernate:
        format_sql: true
        use_sql_comments: true
        generate_statistics: false
        cache:
          use_second_level_cache: false
          use_query_cache: false

  # Development Redis Configuration
  data:
    redis:
      host: localhost
      port: 6379
      password:
      database: 1
      timeout: 2000ms
      lettuce:
        pool:
          max-active: 5
          max-idle: 3
          min-idle: 1

  # Development Kafka Configuration
  kafka:
    bootstrap-servers: localhost:9092
    consumer:
      group-id: user-management-dev-group
      auto-offset-reset: latest
    producer:
      properties:
        enable.idempotence: false
    properties:
      security.protocol: PLAINTEXT

  # Development Cache Configuration
  cache:
    redis:
      time-to-live: 60000ms # 1 minute for testing
      key-prefix: "bist:dev:user-mgmt:"

# Development Logging Configuration
logging:
  level:
    com.bisttrading: DEBUG
    com.bisttrading.user: DEBUG
    com.bisttrading.core.security: DEBUG
    com.bisttrading.infrastructure.persistence: DEBUG
    org.springframework.security: DEBUG
    org.springframework.kafka: DEBUG
    org.springframework.data.redis: DEBUG
    org.hibernate.SQL: DEBUG
    org.hibernate.type.descriptor.sql.BasicBinder: TRACE
    org.flywaydb: INFO
    com.zaxxer.hikari: DEBUG
  pattern:
    console: "%clr(%d{yyyy-MM-dd HH:mm:ss.SSS}){faint} %clr(%5p) %clr(${PID:- }){magenta} %clr(---){faint} %clr([%15.15t]){faint} %clr(%-40.40logger{39}){cyan} %clr(:){faint} %m%n%wEx"
  file:
    name: logs/dev/user-management-service.log

# Development Management & Monitoring
management:
  endpoints:
    web:
      exposure:
        include: "*"  # Expose all endpoints in development
      cors:
        allowed-origins: "http://localhost:3000,http://localhost:8080"
  endpoint:
    health:
      show-details: always
    shutdown:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
      simple:
        enabled: true

# Development OpenAPI Configuration
springdoc:
  swagger-ui:
    enabled: true
    try-it-out-enabled: true
    filter: false
    display-operation-id: true
  api-docs:
    enabled: true

# Development Resilience4j Configuration
resilience4j:
  circuitbreaker:
    instances:
      algolab:
        failure-rate-threshold: 50
        slow-call-duration-threshold: 5s
        slow-call-rate-threshold: 100
        wait-duration-in-open-state: 30s  # Shorter for dev
        permitted-number-of-calls-in-half-open-state: 5
        sliding-window-size: 50  # Smaller window for dev
        minimum-number-of-calls: 3  # Lower threshold for dev
        register-health-indicator: true

  retry:
    instances:
      algolab:
        max-attempts: 2  # Fewer retries in dev
        wait-duration: 1s  # Faster retry in dev
        enable-exponential-backoff: true
        exponential-backoff-multiplier: 2

  timelimiter:
    instances:
      algolab:
        timeout-duration: 8s  # Shorter timeout in dev

# Development BIST Configuration
bist:
  # Development Security
  security:
    jwt:
      access-token-expiration: 3600  # 1 hour for development
      refresh-token-expiration: 86400  # 1 day for development
    cors:
      allowed-origins: "http://localhost:3000,http://localhost:8080,http://localhost:4200"
      allowed-headers: "*"
      allow-credentials: true
    rate-limiting:
      enabled: false  # Disable rate limiting in development

  # Development Validation (relaxed)
  validation:
    tc-kimlik:
      enabled: true
      strict-mode: false  # Allow test TC numbers
    phone:
      require-mobile: false  # Allow landline for testing
    password:
      min-length: 6  # Shorter for testing
      require-special-char: false

  # Development Notifications (disabled/mocked)
  notifications:
    email:
      enabled: false  # Disable real emails in development
      provider: mock
      mock-delivery-delay: 1000  # 1 second mock delay
    sms:
      enabled: false  # Disable real SMS in development
      provider: mock
      mock-delivery-delay: 500  # 0.5 second mock delay

  # Development Session Management (relaxed)
  session:
    max-concurrent-sessions: 10  # Allow more sessions for testing
    session-timeout: 7200  # 2 hours
    cleanup-interval: 60  # 1 minute
    cookie:
      secure: false  # HTTP allowed in development
      same-site: lax

  # Development Account Security (relaxed)
  account:
    max-failed-login-attempts: 10  # More attempts for development
    account-lock-duration: 300  # 5 minutes lock
    password-expiry-days: 0  # No expiry in development
    verification-code-expiry: 3600  # 1 hour for easier testing

  # Development AlgoLab Integration
  integration:
    algolab:
      enabled: true
      base-url: https://sandbox-api.algolab.com.tr  # Sandbox environment
      api-key: dev-api-key-12345
      api-secret: dev-api-secret-67890
      timeout:
        connect: 5000  # Shorter timeout for development
        read: 10000
      rate-limit:
        requests-per-minute: 10000  # No real limiting in dev
      retry:
        max-attempts: 1  # Fail fast in development
      security:
        ssl-verification: false  # Allow self-signed certs in dev

# AlgoLab API Configuration
algolab:
  api:
    key: ${ALGOLAB_API_KEY:API-I1G7BdhIZ3RY/lxNXgqOlFT0bAILG7zmdqwtiagSnDM=}
    hostname: https://www.algolab.com.tr
    url: https://www.algolab.com.tr/api
    rate-limit: 0.2  # 0.2 req/sec = 1 request per 5 seconds
  auth:
    username: ${ALGOLAB_USERNAME:52738096404}
    password: ${ALGOLAB_PASSWORD:141589}
    auto-login: true
    keep-alive: true
    refresh-interval-ms: 300000  # 5 minutes
  session:
    storage: ${ALGOLAB_SESSION_STORAGE:file}  # file or database
    file-path: ./algolab-session-dev.json
    expiration-hours: 12  # Shorter in dev
    retention-days: 7  # Shorter retention in dev
    cleanup-cron: "0 0 */6 * * *"  # Every 6 hours in dev
    auto-cleanup: true
  websocket:
    enabled: true  # Enabled - correct URL and headers
    url: wss://www.algolab.com.tr/api/ws  # CRITICAL: Use /api/ws (from Python config.py)
    auto-connect: true  # Enabled with correct configuration
    heartbeat-interval: 900000  # 15 minutes in milliseconds
    connection-timeout: 30000  # 30 seconds
    reconnect:
      enabled: true  # Enable reconnection attempts
      initial-delay: 1000  # 1 second
      max-delay: 60000  # 60 seconds
      multiplier: 2.0
      max-attempts: 3  # Limited to 3 attempts in dev
  cache:
    enabled: true  # Redis cache aktif
    ttl-minutes: 5  # Tick data yaşam süresi (5 dakika)
    max-items-per-symbol: 100  # Sembol başına maksimum tick sayısı
    metrics:
      enabled: true  # Metrik toplama aktif
      sliding-window-seconds: 60  # Son 1 dakika için sliding window

  # Development Broker Integrations (sandbox)
  brokers:
    denizbank:
      enabled: true
      base-url: https://sandbox-api.denizbank.com/investment
      timeout:
        connect: 5000
        read: 15000
    garanti:
      enabled: true
      base-url: https://sandbox-api.garantibbva.com.tr/trading
      timeout:
        connect: 5000
        read: 20000

  # Development Event Publishing
  events:
    kafka:
      enabled: true
      topics:
        user-created: dev.user.events.created
        user-updated: dev.user.events.updated
        user-deleted: dev.user.events.deleted
        user-login: dev.user.events.login
        user-logout: dev.user.events.logout

  # Development Feature Flags
  features:
    two-factor-auth:
      enabled: true
      mandatory-for-professional: false  # Not mandatory in dev
    kyc-verification:
      enabled: true
      auto-verify-test-users: true  # Auto-verify for faster testing
    email-verification:
      enabled: true
      required-for-trading: false  # Not required in dev
    phone-verification:
      enabled: true
      required-for-trading: false  # Not required in dev
    password-complexity:
      enabled: false  # Disabled for easier testing
    user-activity-tracking:
      enabled: true
      track-ip-changes: false  # Don't track IP changes in dev
    gdpr-compliance:
      enabled: false  # Simplified for development

# Development Database Health Check
health:
  datasource:
    enabled: true
    validation-query: SELECT 1

# Development Turkish Test Data
test-data:
  enabled: true
  turkish:
    test-tc-numbers:
      - "11111111110"  # Valid test TC Kimlik
      - "22222222220"  # Valid test TC Kimlik
      - "33333333330"  # Valid test TC Kimlik
    test-phone-numbers:
      - "5551234567"   # Test mobile number
      - "5559876543"   # Test mobile number
    test-ibans:
      - "TR330006100519786457841326"  # Test IBAN

# Development Debugging
debug: true