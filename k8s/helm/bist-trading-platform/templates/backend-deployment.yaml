{{- if .Values.backend.enabled }}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "bist-trading-platform.fullname" . }}-backend
  namespace: {{ .Values.namespace }}
  labels:
    app: backend
    {{- include "bist-trading-platform.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.backend.replicaCount }}
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxSurge: 1
      maxUnavailable: 0
  selector:
    matchLabels:
      app: backend
      {{- include "bist-trading-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: backend
        {{- include "bist-trading-platform.selectorLabels" . | nindent 8 }}
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/configmap.yaml") . | sha256sum }}
        checksum/secret: {{ include (print $.Template.BasePath "/secret.yaml") . | sha256sum }}
    spec:
      serviceAccountName: {{ include "bist-trading-platform.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}

      # Init containers
      initContainers:
        - name: wait-for-postgres
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z {{ include "bist-trading-platform.fullname" . }}-postgres {{ .Values.postgresql.service.port }}; do
                echo "Waiting for PostgreSQL..."
                sleep 2
              done
        - name: wait-for-redis
          image: busybox:1.36
          command:
            - sh
            - -c
            - |
              until nc -z {{ include "bist-trading-platform.fullname" . }}-redis {{ .Values.redis.service.port }}; do
                echo "Waiting for Redis..."
                sleep 2
              done

      containers:
        - name: backend
          image: "{{ .Values.backend.image.repository }}:{{ .Values.backend.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.backend.image.pullPolicy }}
          ports:
            - name: http
              containerPort: {{ .Values.backend.service.targetPort }}
              protocol: TCP

          envFrom:
            - configMapRef:
                name: {{ include "bist-trading-platform.fullname" . }}-config
            - secretRef:
                name: {{ include "bist-trading-platform.fullname" . }}-secret

          resources:
            {{- toYaml .Values.backend.resources | nindent 12 }}

          {{- if .Values.backend.livenessProbe.enabled }}
          livenessProbe:
            httpGet:
              path: {{ .Values.backend.livenessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.backend.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.livenessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.livenessProbe.failureThreshold }}
          {{- end }}

          {{- if .Values.backend.readinessProbe.enabled }}
          readinessProbe:
            httpGet:
              path: {{ .Values.backend.readinessProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.backend.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.readinessProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.readinessProbe.failureThreshold }}
          {{- end }}

          {{- if .Values.backend.startupProbe.enabled }}
          startupProbe:
            httpGet:
              path: {{ .Values.backend.startupProbe.path }}
              port: http
            initialDelaySeconds: {{ .Values.backend.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.backend.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.backend.startupProbe.timeoutSeconds }}
            failureThreshold: {{ .Values.backend.startupProbe.failureThreshold }}
          {{- end }}

      terminationGracePeriodSeconds: 30
{{- end }}
