{{- if .Values.redis.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "bist-trading-platform.fullname" . }}-redis
  namespace: {{ .Values.namespace }}
  labels:
    app: redis
    {{- include "bist-trading-platform.labels" . | nindent 4 }}
spec:
  type: {{ .Values.redis.service.type }}
  clusterIP: None
  ports:
    - port: {{ .Values.redis.service.port }}
      targetPort: 6379
      protocol: TCP
      name: redis
  selector:
    app: redis
    {{- include "bist-trading-platform.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bist-trading-platform.fullname" . }}-redis
  namespace: {{ .Values.namespace }}
  labels:
    app: redis
    {{- include "bist-trading-platform.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "bist-trading-platform.fullname" . }}-redis
  replicas: 1
  selector:
    matchLabels:
      app: redis
      {{- include "bist-trading-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: redis
        {{- include "bist-trading-platform.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: redis
          image: "{{ .Values.redis.image.repository }}:{{ .Values.redis.image.tag }}"
          ports:
            - containerPort: 6379
              name: redis
          command:
            - redis-server
            - --requirepass
            - $(REDIS_PASSWORD)
            - --appendonly
            - "yes"
            - --save
            - "900 1"
            - --save
            - "300 10"
            - --save
            - "60 10000"
          env:
            - name: REDIS_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "bist-trading-platform.fullname" . }}-secret
                  key: REDIS_PASSWORD
          volumeMounts:
            - name: redis-storage
              mountPath: /data
          resources:
            {{- toYaml .Values.redis.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - redis-cli
                - --raw
                - incr
                - ping
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - redis-cli
                - --raw
                - incr
                - ping
            initialDelaySeconds: 5
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
  {{- if .Values.redis.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: redis-storage
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.redis.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.redis.persistence.size }}
  {{- end }}
{{- end }}
