{{- if .Values.postgresql.enabled }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ include "bist-trading-platform.fullname" . }}-postgres
  namespace: {{ .Values.namespace }}
  labels:
    app: postgres
    {{- include "bist-trading-platform.labels" . | nindent 4 }}
spec:
  type: {{ .Values.postgresql.service.type }}
  clusterIP: None
  ports:
    - port: {{ .Values.postgresql.service.port }}
      targetPort: 5432
      protocol: TCP
      name: postgres
  selector:
    app: postgres
    {{- include "bist-trading-platform.selectorLabels" . | nindent 4 }}
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "bist-trading-platform.fullname" . }}-postgres
  namespace: {{ .Values.namespace }}
  labels:
    app: postgres
    {{- include "bist-trading-platform.labels" . | nindent 4 }}
spec:
  serviceName: {{ include "bist-trading-platform.fullname" . }}-postgres
  replicas: 1
  selector:
    matchLabels:
      app: postgres
      {{- include "bist-trading-platform.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: postgres
        {{- include "bist-trading-platform.selectorLabels" . | nindent 8 }}
    spec:
      containers:
        - name: postgres
          image: "{{ .Values.postgresql.image.repository }}:{{ .Values.postgresql.image.tag }}"
          ports:
            - containerPort: 5432
              name: postgres
          env:
            - name: POSTGRES_DB
              value: {{ .Values.postgresql.database.name | quote }}
            - name: POSTGRES_USER
              value: {{ .Values.postgresql.database.user | quote }}
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "bist-trading-platform.fullname" . }}-secret
                  key: DB_PASSWORD
            - name: PGDATA
              value: /var/lib/postgresql/data/pgdata
          volumeMounts:
            - name: postgres-storage
              mountPath: /var/lib/postgresql/data
          resources:
            {{- toYaml .Values.postgresql.resources | nindent 12 }}
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.database.user }} -d {{ .Values.postgresql.database.name }}
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 3
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - pg_isready -U {{ .Values.postgresql.database.user }} -d {{ .Values.postgresql.database.name }}
            initialDelaySeconds: 10
            periodSeconds: 5
            timeoutSeconds: 3
            failureThreshold: 3
  {{- if .Values.postgresql.persistence.enabled }}
  volumeClaimTemplates:
    - metadata:
        name: postgres-storage
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: {{ .Values.postgresql.persistence.storageClass }}
        resources:
          requests:
            storage: {{ .Values.postgresql.persistence.size }}
  {{- end }}
{{- end }}
