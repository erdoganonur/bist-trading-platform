spring:
  # Production Database Configuration
  datasource:
    url: jdbc:postgresql://${POSTGRES_HOST}:${POSTGRES_PORT}/${POSTGRES_DB}
    username: ${POSTGRES_USER}
    password: ${POSTGRES_PASSWORD}
    hikari:
      maximum-pool-size: 50
      minimum-idle: 10
      connection-timeout: 30000
      idle-timeout: 600000
      max-lifetime: 1800000
      leak-detection-threshold: 60000

  # Production JPA Configuration
  jpa:
    hibernate:
      ddl-auto: validate
    show-sql: false
    properties:
      hibernate:
        dialect: org.hibernate.dialect.PostgreSQLDialect
        jdbc:
          batch_size: 50
        order_inserts: true
        order_updates: true
        generate_statistics: false

  # Production Cache Configuration
  cache:
    type: redis

  # Production Redis Configuration
  data:
    redis:
      host: ${REDIS_HOST}
      port: ${REDIS_PORT}
      password: ${REDIS_PASSWORD}
      timeout: 5000ms
      lettuce:
        pool:
          max-active: 20
          max-idle: 10
          min-idle: 5
        shutdown-timeout: 100ms

# Production Server Configuration
server:
  port: ${SERVER_PORT:8080}
  tomcat:
    max-threads: 200
    min-spare-threads: 10
    accept-count: 100
  compression:
    enabled: true
    mime-types: text/html,text/xml,text/plain,text/css,text/javascript,application/javascript,application/json
    min-response-size: 1024

# Production Logging
logging:
  level:
    com.bisttrading: INFO
    org.springframework: WARN
    org.hibernate: WARN
    org.apache.kafka: WARN
  pattern:
    console: "%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{50} - %msg%n"
  file:
    name: /var/log/bist-trading/user-management-service.log
    max-size: 100MB
    max-history: 30

# Production Management Configuration
management:
  endpoints:
    web:
      exposure:
        include: health,info,metrics,prometheus
  endpoint:
    health:
      show-details: never
    metrics:
      enabled: true
  metrics:
    export:
      prometheus:
        enabled: true
        step: 30s

# Production Security Configuration
security:
  jwt:
    secret: ${JWT_SECRET}
    expiration: ${JWT_EXPIRATION:86400000}  # 24 hours
    refresh-expiration: ${JWT_REFRESH_EXPIRATION:604800000}  # 7 days

# Production OpenAPI
springdoc:
  api-docs:
    enabled: false
  swagger-ui:
    enabled: false

# Production Feature Flags
app:
  features:
    real-time-trading: ${FEATURE_REAL_TIME_TRADING:true}
    advanced-analytics: ${FEATURE_ADVANCED_ANALYTICS:true}
    debug-mode: false