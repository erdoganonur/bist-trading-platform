plugins {
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'java'
}

// Configuration inherited from root project

dependencies {
    // Internal dependencies
    // implementation project(':platform-services:broker-integration-service') // Temporarily disabled
    implementation project(':platform-infrastructure:infrastructure-persistence')

    // Spring Boot Starters
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-webflux'
    implementation 'org.springframework.boot:spring-boot-starter-websocket'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-data-redis'
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-validation'

    // WebSocket Client
    implementation 'org.java-websocket:Java-WebSocket:1.5.4'

    // Resilience4j for Circuit Breaker
    implementation 'io.github.resilience4j:resilience4j-spring-boot3'
    implementation 'io.github.resilience4j:resilience4j-reactor'

    // PostgreSQL/TimescaleDB Driver
    runtimeOnly 'org.postgresql:postgresql'

    // Redis
    implementation 'io.lettuce:lettuce-core'

    // Jackson for JSON processing
    implementation 'com.fasterxml.jackson.core:jackson-databind'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310'

    // OpenAPI/Swagger
    implementation 'org.springdoc:springdoc-openapi-starter-webmvc-ui:2.2.0'

    // Lombok for reducing boilerplate code
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'

    // Micrometer for metrics
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // Spring Boot Configuration Processor
    annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'

    // Development tools
    developmentOnly 'org.springframework.boot:spring-boot-devtools'

    // Test Dependencies
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testImplementation 'io.projectreactor:reactor-test'
    testImplementation 'org.testcontainers:junit-jupiter'
    testImplementation 'org.testcontainers:postgresql'
    testImplementation 'com.github.tomakehurst:wiremock-jre8:2.35.0'
    testImplementation 'org.awaitility:awaitility'
    testImplementation 'it.ozimov:embedded-redis:0.7.3'
    testRuntimeOnly 'com.h2database:h2'
}

// Additional test configuration
tasks.named('test') {
    // TestContainer configuration
    systemProperty 'testcontainers.reuse.enable', 'true'

    // JVM options for tests
    jvmArgs = [
        '--add-opens=java.base/java.lang=ALL-UNNAMED'
    ]
}

// Spring Boot configuration
springBoot {
    buildInfo()
}

// Jar configuration
jar {
    archiveBaseName = 'market-data-service'
    archiveVersion = version
    enabled = false
}

bootJar {
    archiveBaseName = 'market-data-service'
    archiveVersion = version
    enabled = true

    // Exclude Lombok from the fat JAR
    exclude '**/lombok/**'
}

// Code quality and analysis
tasks.register('checkCode') {
    group = 'verification'
    description = 'Run all code quality checks'
    dependsOn tasks.test
}

// Development profile
tasks.register('bootRunDev') {
    group = 'application'
    description = 'Run the application with dev profile'
    doFirst {
        bootRun.systemProperty 'spring.profiles.active', 'dev'
    }
    finalizedBy bootRun
}